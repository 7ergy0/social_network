{"version":3,"sources":["hoc/withAuthRedirect.tsx","components/Profile/Profile.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Profile/ProfileInfo/ProfilePhoto.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/ProfileInfo/ProfilePhoto.tsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.tsx","components/Profile/ProfileInfo/ProfileDataForm.tsx","components/Profile/ProfileInfo/ProfileInfo.tsx","components/Profile/MyPosts/Post/Post.tsx","components/Profile/MyPosts/MyPosts.tsx","components/Profile/MyPosts/Post/MyPostsContainer.tsx","components/Profile/Profile.tsx","components/Profile/ProfileContainer.tsx"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","compose","connect","props","restProps","to","module","exports","ProfilePhoto","editMode","image","activeEditMode","setState","activeViewMode","updateStatusProfile","onSavePhotoProfile","e","currentTarget","files","savePhotoProfile","className","s","photo","this","isOwner","type","onChange","src","userPhoto","onDoubleClick","React","ProfileStatusWithHooks","console","log","useState","setEditMode","status","setStatus","useEffect","value","onBlur","autoFocus","ProfileDataForms","reduxForm","form","profile","error","handleSubmit","onSubmit","formError","htmlFor","Field","name","component","Object","keys","contacts","map","m","index","ProfileInfo","saveProfile","profileInfo","descriptionBlock","photos","large","initialValues","formData","goToEditMode","Preloader","Contacts","contactTitle","contactValue","ProfileData","onClick","fullName","lookingForAJob","lookingForAJobDescription","aboutMe","Post","n","posts","item","message","likesCount","MyPosts","postsElement","profilePage","postsData","id","postsBlock","AddMyPostForm","values","addPostAction","addMyPost","maxLength","Textarea","validate","required","dispatch","addPostActionCreator","Profile","MyPostsContainer","ProfileContainer","userId","match","params","authUserId","history","push","defaultProfile","getStatusProfile","refreshProfile","prevProps","prevState","snapshot","withRouter"],"mappings":"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","file":"static/js/3.a9277f95.chunk.js","sourcesContent":["import React, {Component, ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\n\r\ntype mapStateToPropsForRedirectType={\r\n    isAuth:boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: RootStateType):mapStateToPropsForRedirectType => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport function withAuthRedirect<T>(Component:ComponentType<T>){\r\n\r\n    function RedirectComponent(props: mapStateToPropsForRedirectType) {\r\n        let {isAuth,...restProps}=props\r\n        if (!props.isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\nreturn compose<ComponentType>(connect(mapStateToPropsForRedirect))(RedirectComponent);\r\n\r\n}","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"Profile_profile__3tjQk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profileInfo\":\"ProfileInfo_profileInfo__1wh7k\",\"descriptionBlock\":\"ProfileInfo_descriptionBlock__1tXEn\",\"contacts\":\"ProfileInfo_contacts__1EuP4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"photo\":\"ProfilePhoto_photo__33C1d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__N1xvb\",\"posts\":\"MyPosts_posts__1ASRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"post\":\"Post_post__XNwgh\",\"item\":\"Post_item__37Gze\"};","import React, {ChangeEvent} from \"react\";\r\nimport s from \"./ProfilePhoto.module.css\"\r\nimport userPhoto from \"../../../assets/images/users.png\"\r\n\r\n\r\n\r\ntype ProfilePhotoType = {\r\n    editMode: boolean\r\n    status: string\r\n    image: any\r\n    isOwner: any\r\n\r\n\r\n}\r\n\r\n\r\nclass ProfilePhoto extends React.Component<any, ProfilePhotoType> {\r\n    state: any = {\r\n        editMode: false,\r\n        image: this.props.image,\r\n    }\r\n    activeEditMode = () => {\r\n        this.setState({\r\n            editMode: true\r\n        })\r\n    };\r\n    activeViewMode = () => {\r\n        this.setState({\r\n            editMode: false\r\n        })\r\n        this.props.updateStatusProfile(this.state.image)\r\n\r\n    };\r\n    onSavePhotoProfile=(e:ChangeEvent<HTMLInputElement> )=>{\r\n        if(e.currentTarget.files){\r\n      this.props.savePhotoProfile(e.currentTarget.files[0])\r\n        }\r\n    }\r\n    // onChangeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n    //     this.setState({\r\n    //         status: e.currentTarget.value\r\n    //     })\r\n    // };\r\n    //\r\n    // componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<ProfilePhotoType>, snapshot?: any) {\r\n    //     if (prevProps.image !== this.props.image) {\r\n    //         this.setState({\r\n    //             //image: this.props.image\r\n    //         });\r\n    //     }\r\n    // }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div className={s.photo}>\r\n                { this.state.editMode && this.props.isOwner\r\n                ? <input type={\"file\"} onChange={this.onSavePhotoProfile}/>\r\n                :<span><img src={this.props.image || userPhoto } onDoubleClick={this.activeEditMode}\r\n                    /></span>}\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ProfilePhoto;\r\n\r\n","import React, {ChangeEvent, useEffect, useState} from \"react\";\r\n\r\n\r\ntype ProfileStatusPropsType = {\r\n    status:string\r\n    updateStatusProfile:(newStatus:string)=>void\r\n}\r\n\r\n\r\nfunction ProfileStatusWithHooks(props:ProfileStatusPropsType){\r\n    console.log('render')\r\n    const [editMode,setEditMode]=useState(false)\r\n    const [status,setStatus]=useState(props.status)\r\n\r\n    useEffect(()=>{\r\n        console.log('Effect')\r\n        setStatus(props.status)\r\n    },[props.status])\r\n\r\n   const activeEditMode = () => {\r\n        setEditMode(true)\r\n    };\r\n\r\n    const activeViewMode = () => {\r\n       setEditMode(false)\r\n        props.updateStatusProfile(status)\r\n    };\r\n\r\nconst onChangeStatus = (e: ChangeEvent<HTMLInputElement>) => {\r\n    setStatus(e.currentTarget.value)\r\n};\r\n        return (\r\n\r\n            <div>\r\n                {\r\n                    editMode\r\n\r\n                        ? <input value={status} onChange={onChangeStatus} onBlur={activeViewMode}\r\n                                 autoFocus/>\r\n                        : <span onDoubleClick={activeEditMode}><b>Status:</b> {props.status || \"-----\"}</span>\r\n                }\r\n\r\n\r\n            </div>\r\n        )\r\n\r\n}\r\n\r\nexport default ProfileStatusWithHooks;\r\n\r\n","import React from \"react\";\r\nimport {Field, InjectedFormProps, reduxForm} from \"redux-form\";\r\nimport s from \"../../../common/formsControls/FormsControls.module.css\";\r\n\r\n\r\ninterface ProfileType{\r\nprofile:any\r\n}\r\ninterface ProfileDataFormType{\r\n    fullName: string\r\n    lookingForAJob: string\r\n    myProfessionalSkills: string\r\n    aboutMe: string\r\n}\r\nconst ProfileDataForm = ({profile,error, ...props}: ProfileType & InjectedFormProps<ProfileDataFormType, ProfileType>) => {\r\n    const {handleSubmit} = props\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {\r\n               error && <div className={s.formError}>\r\n                    {error}\r\n                </div>\r\n            }\r\n            <div>\r\n                <button>save</button>\r\n            </div>\r\n            <div>\r\n                <label htmlFor={\"fullName\"}><b>Full name:</b></label>\r\n                <Field name={\"fullName\"} component={\"input\"} type={\"text\"}/>\r\n            </div>\r\n            <div>\r\n                <label htmlFor={\"lookingForAJob\"}><b>Looking for a job:</b></label>\r\n                <Field name={\"lookingForAJob\"} component={\"input\"} type={\"checkbox\"}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor={\"myProfessionalSkills\"}><b>My professional skills:</b></label>\r\n                <Field name={\"lookingForAJobDescription\"} component={\"input\"} type={\"text\"}/>\r\n            </div>\r\n\r\n            <div>\r\n                <label htmlFor={\"aboutMe\"}><b>About me:</b></label>\r\n                <Field name={\"aboutMe\"} component={\"input\"} type={\"text\"}/>\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b>{Object.keys(profile.contacts).map((m,index)=>{\r\n                return <div key={index}>\r\n                    <b>{m}:</b>\r\n                    <Field name={\"contacts.\"+m} component={\"input\"} type={\"text\"} />\r\n\r\n                </div>\r\n                })}\r\n\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\nlet ProfileDataForms = reduxForm<ProfileDataFormType,ProfileType>({\r\n    form: 'contacts'\r\n})(ProfileDataForm)\r\n\r\nexport default ProfileDataForms;","import React, {useState} from \"react\";\r\nimport s from './ProfileInfo.module.css'\r\nimport Preloader from \"../../Preloader/Preloader\";\r\nimport ProfilePhoto from \"./ProfilePhoto\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport ProfileDataForms from \"./ProfileDataForm\";\r\n\r\n\r\n\r\ntype ProfileInfoType={\r\n\r\n}\r\n\r\nfunction ProfileInfo({saveProfile,...props}:any) {\r\n    const [editMode,setEditMode]=useState<boolean>(false)\r\n    if(!props.profile){\r\n        return <Preloader/>\r\n    }\r\n    const onSubmit=(formData:any)=>{\r\n        saveProfile(formData)\r\n        //setEditMode(false)\r\n    }\r\n        return(\r\n\r\n\r\n           props.isOwner && <div className={s.profileInfo}>\r\n\r\n                <div className={s.descriptionBlock}>\r\n                    <ProfilePhoto image={props.profile.photos.large} isOwner={props.isOwner}\r\n                                  savePhotoProfile={props.savePhotoProfile}\r\n                    />\r\n                 <div>\r\n                     {editMode\r\n                         ?<ProfileDataForms profile={props.profile} initialValues={props.profile}\r\n                                           onSubmit={onSubmit}/>\r\n                         :<ProfileData profile={props.profile} isOwner={props.isOwner}\r\n                                       goToEditMode={()=>{setEditMode(true)}}/>}\r\n                 </div>\r\n                    <ProfileStatusWithHooks status={props.status} updateStatusProfile={props.updateStatusProfile}/>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n\r\nexport default ProfileInfo;\r\n\r\nexport type ContactsTypeProps={\r\n    github: string\r\n    vk: string\r\n    facebook: string\r\n    instagram: string\r\n    twitter:string\r\n    website:string\r\n    youtube: string\r\n    mainLink: string\r\n}\r\ntype ContactsType={\r\n    contactTitle:string\r\n    contactValue:string\r\n}\r\n\r\n export const Contacts=(props:ContactsType)=>{\r\n    return(\r\n        <div className={s.contacts}>\r\n           <b>{props.contactTitle}:</b> {props.contactValue}\r\n        </div>\r\n    )\r\n}\r\n\r\nconst ProfileData=(props:any)=>{\r\n    return(\r\n        <div>\r\n            {props.isOwner && <div><button onClick={props.goToEditMode}>edit</button></div>}\r\n            <div>\r\n                <b>Full Name:</b>{props.profile.fullName}\r\n            </div>\r\n            <div>\r\n                <b>Looking for a job:</b>{props.profile.lookingForAJob?\"yes\":\"no\"}\r\n            </div>\r\n            {props.profile.lookingForAJob &&\r\n            <div>\r\n                <b>My professional skills:</b>{props.profile.lookingForAJobDescription}\r\n            </div>\r\n            }\r\n            <div>\r\n                <b>About me:</b>{props.profile.aboutMe}\r\n            </div>\r\n            <div>\r\n                <b>Contacts:</b>{Object.keys(props.profile.contacts).map((m,index)=>{\r\n                return <Contacts key={index} contactTitle={m} contactValue={props.profile.contacts[m]} />\r\n            })}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\r\nimport n from './Post.module.css'\r\n\r\n\r\n\r\nfunction Post(props:any){\r\n    return(\r\n        <div className={n.posts}>\r\n            <div className={n.item}>\r\n                    <img src={\"https://s00.yaplakal.com/pics/pics_original/7/6/7/14289767.jpg\"}/>\r\n                {props.message}\r\n            </div>\r\n            <div>\r\n                <span>like</span>\r\n                <span>{props.likesCount}</span>\r\n            </div>\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\nexport default Post","import React from \"react\";\r\nimport n from './MyPosts.module.css'\r\nimport Post from \"./Post/Post\";\r\nimport {MyPostsContainerType} from \"./Post/MyPostsContainer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../../common/formsControls/FormsControls\";\r\nimport {maxLength, required} from \"../../../utils/validators/Validators\";\r\n\r\n\r\ntype MyPostType = {}\r\n\r\nfunction MyPosts(props: MyPostsContainerType) {\r\n\r\n    let postsElement =\r\n        props.state.profilePage.postsData.map((m) => <Post key={m.id} message={m.message} likesCount={m.likesCount}/>)\r\n\r\n    let addPost = (values:any) => {\r\n        props.addPostAction(values.addMyPost)\r\n    }\r\n    // let onPostChange = (e: ChangeEvent<HTMLTextAreaElement>) => {\r\n    //     let text = e.target.value\r\n    //     props.updateNewPostTextAction(text)\r\n    // }\r\n\r\n    return (\r\n        <div className={n.postsBlock}>\r\n\r\n            <h3>My Post</h3>\r\n\r\n            <div>\r\n             <AddMyPostForm onSubmit={addPost}/>\r\n            </div>\r\n            <div className={n.posts}>\r\n\r\n                {postsElement}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default MyPosts;\r\n\r\nfunction PostForm(props:any) {\r\n    const maxLength50=maxLength(50)\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field name={'addMyPost'} component={Textarea} validate={required}/>\r\n            </div>\r\n            <div>\r\n                <button>Add post</button>\r\n            </div>\r\n        </form>\r\n\r\n\r\n    )\r\n}\r\n\r\nlet AddMyPostForm = reduxForm({form: 'AddMyPostForm'})(PostForm)","import React from \"react\";\r\nimport MyPosts from \"../MyPosts\";\r\nimport {addPostActionCreator} from \"../../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {RootStateType} from \"../../../../redux/redux-store\";\r\nimport {compose, Dispatch} from \"@reduxjs/toolkit\";\r\n\r\ntype mapStateToPropsType={\r\n   // newPostText:string\r\n    state:RootStateType\r\n}\r\ntype mapDispatchToPropsType={\r\n    addPostAction:(addMyPost:string)=>void\r\n    // updateNewPostTextAction:(text: string)=>void\r\n}\r\nexport type MyPostsContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\n\r\nlet mapStateToProps = (state:RootStateType) => {\r\n    return {\r\n        state: state\r\n    }\r\n}\r\nlet mapDispatchToProps = (dispatch:Dispatch) => {\r\n    return {\r\n        addPostAction: (addMyPost:string) => {\r\n            dispatch(addPostActionCreator(addMyPost))\r\n        },\r\n        // updateNewPostTextAction: (text: string) => {\r\n        //     dispatch(updateNewPostTextActionCreator(text))\r\n        // }\r\n\r\n    }\r\n}\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps))(MyPosts);","import React from \"react\";\r\nimport n from './Profile.module.css'\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/Post/MyPostsContainer\";\r\n\r\n\r\n\r\ntype ProfileType = {}\r\n\r\n\r\nfunction Profile(props: any) {\r\n    return (\r\n        <div className={n.profile}>\r\n            <ProfileInfo profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatusProfile={props.updateStatusProfile}\r\n                         isOwner={props.isOwner}\r\n                         savePhotoProfile={props.savePhotoProfile}\r\n                         saveProfile={props.saveProfile}/>\r\n            <MyPostsContainer/>\r\n\r\n        </div>\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default Profile","import React, {ComponentType} from \"react\";\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {\r\n    defaultProfile, savePhotoProfile,\r\n    getStatusProfile,\r\n    updateStatusProfile, saveProfile\r\n} from \"../../redux/profile-reducer\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\nimport {ProfileType} from \"../../types\";\r\n\r\n\r\ntype mapsStateToPropsType = {\r\n    profile: ProfileType | null\r\n    status: string\r\n    authUserId: number | null\r\n    isAuth: boolean\r\n\r\n}\r\n\r\nexport type ProfileContainerType = mapsStateToPropsType\r\n\r\nclass ProfileContainer extends React.Component<any, RootStateType> {\r\n\r\n    refreshProfile() {\r\n\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authUserId;\r\n            if (!userId) {\r\n                this.props.history.push('/login')\r\n            }\r\n        }\r\n        this.props.defaultProfile(userId);\r\n        this.props.getStatusProfile(userId);\r\n    }\r\n\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps: Readonly<any>, prevState: Readonly<RootStateType>, snapshot?: any) {\r\n        if (this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Profile {...this.props} profile={this.props.profile}\r\n                     status={this.props.status}\r\n                     updateStatusProfile={this.props.updateStatusProfile}\r\n                     isOwner={!this.props.match.params.userId}\r\n                     savePhotoProfile={this.props.savePhotoProfile}\r\n                     saveProfile={this.props.saveProfile}/>\r\n        )\r\n    }\r\n}\r\n\r\nlet mapStateToProps = (state: RootStateType): mapsStateToPropsType => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authUserId: state.auth.userId,\r\n    isAuth: state.auth.isAuth,\r\n\r\n\r\n});\r\n\r\nexport default compose<ComponentType>(connect(mapStateToProps, {\r\n    defaultProfile,\r\n    getStatusProfile,\r\n    updateStatusProfile,\r\n    savePhotoProfile,\r\n    saveProfile\r\n}), withRouter, withAuthRedirect)(ProfileContainer);\r\n"],"sourceRoot":""}