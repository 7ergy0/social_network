{"version":3,"sources":["components/Dialogs/Dialogs.module.css","hoc/withAuthRedirect.tsx","components/Dialogs/Message/MessageItem.tsx","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","compose","connect","props","restProps","to","MessageItem","className","s","dialog","message","DialogItem","item","id","activeClassName","activeItem","name","Dialogs","dialogsElement","dialogsPage","dialogsData","map","m","messagesElement","messagesData","dialogs","dialogsItems","messages","DialogsReduxForm","onSubmit","values","sendMessageAction","addMessageBody","reduxForm","form","handleSubmit","Field","component","Textarea","placeholder","validate","required","dispatch","sendMessageActionCreator"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,KAAO,sBAAsB,WAAa,4BAA4B,SAAW,0BAA0B,OAAS,0B,2HCSlNC,EAA6B,SAACC,GAAD,MAA0D,CACvFC,OAAQD,EAAME,KAAKD,SAGhB,SAASE,EAAoBC,GAQpC,OAAOC,YAAuBC,YAAQP,GAA/BM,EANH,SAA2BE,GACGA,EAArBN,OAD0D,IAChDO,EAD+C,YACpCD,EADoC,YAE9D,OAAKA,EAAMN,OACJ,cAACG,EAAD,eAAeI,IADI,cAAC,IAAD,CAAUC,GAAI,gB,qFCDjCC,MAZf,SAAqBH,GAEjB,OAAQ,qBAAKI,UAAWC,IAAEC,OAAlB,SAA2BN,EAAMO,W,QCG9BC,MANf,SAAoBR,GAChB,OAAQ,qBAAKI,UAAWC,IAAEI,KAAlB,SACA,cAAC,IAAD,CAASP,GAAI,YAAcF,EAAMU,GAAIC,gBAAiBN,IAAEO,WAAxD,SAAqEZ,EAAMa,U,kCCyCxEC,MA1Bf,SAAiBd,GAEb,IAAIe,EAAiBf,EAAMP,MAAMuB,YAAYC,YAAYC,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAuBN,KAAMM,EAAEN,KACnBH,GAAIS,EAAET,IADDS,EAAET,OAEnFU,EAAkBpB,EAAMP,MAAMuB,YAAYK,aAAaH,KAAI,SAACC,GAAD,OAAO,cAAC,EAAD,CAAwBZ,QAASY,EAAEZ,SAAjBY,EAAET,OAM1F,OACI,sBAAKN,UAAWC,IAAEiB,QAAlB,UACI,qBAAKlB,UAAWC,IAAEkB,aAAlB,SAEKR,IAEL,sBAAKX,UAAWC,IAAEmB,SAAlB,UACKJ,EACD,8BACG,cAACK,EAAD,CAAkBC,SAbV,SAACC,GACpB3B,EAAM4B,kBAAkBD,EAAOE,4BA+BvC,IAAIJ,EAAiBK,YAAU,CAACC,KAAK,wBAAhBD,EAVrB,SAA8B9B,GAC1B,OACI,uBAAM0B,SAAU1B,EAAMgC,aAAtB,UACI,8BAAK,cAACC,EAAA,EAAD,CAAOpB,KAAM,iBAAkBqB,UAAWC,IACnCC,YAAa,qBAAsBC,SAAUC,QACzD,8BAAK,kD,yBCtBFxC,sBAAuBC,aAbhB,SAACN,GACnB,MAAO,CACHA,MAAMA,MAIW,SAAC8C,GACtB,MAAO,CACHX,kBAAmB,SAACC,GAChBU,EAASC,YAAyBX,SAIqCjC,IAApEE,CAAsFgB","file":"static/js/4.ff115884.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__2abud\",\"dialogsItems\":\"Dialogs_dialogsItems__2AfyV\",\"item\":\"Dialogs_item__2DlkR\",\"activeItem\":\"Dialogs_activeItem__1gopf\",\"messages\":\"Dialogs_messages__33-2s\",\"dialog\":\"Dialogs_dialog__bUJtd\"};","import React, {Component, ComponentType} from \"react\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport {RootStateType} from \"../redux/redux-store\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose} from \"@reduxjs/toolkit\";\r\n\r\ntype mapStateToPropsForRedirectType={\r\n    isAuth:boolean\r\n}\r\n\r\nlet mapStateToPropsForRedirect = (state: RootStateType):mapStateToPropsForRedirectType => ({\r\n    isAuth: state.auth.isAuth\r\n});\r\n\r\nexport function withAuthRedirect<T>(Component:ComponentType<T>){\r\n\r\n    function RedirectComponent(props: mapStateToPropsForRedirectType) {\r\n        let {isAuth,...restProps}=props\r\n        if (!props.isAuth) return <Redirect to={'/login'}/>\r\n        return <Component {...restProps as T}/>\r\n    }\r\n\r\nreturn compose<ComponentType>(connect(mapStateToPropsForRedirect))(RedirectComponent);\r\n\r\n}","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\n\r\n\r\nfunction MessageItem(props: any) {\r\n\r\n    return (<div className={s.dialog}>{props.message}</div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n    )\r\n}\r\n\r\nexport default MessageItem;","import React from \"react\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nfunction DialogItem(props: any) {\r\n    return (<div className={s.item}>\r\n            <NavLink to={'/dialogs/' + props.id} activeClassName={s.activeItem}>{props.name}</NavLink>\r\n        </div>\r\n    )\r\n}\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport MessageItem from \"./Message/MessageItem\";\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport {DialogsContainerType} from \"./DialogsContainer\";\r\nimport {Field, reduxForm} from \"redux-form\";\r\nimport {Textarea} from \"../../common/formsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/Validators\";\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\ntype DialogsType = {\r\n\r\n}\r\n\r\n\r\nfunction Dialogs(props:DialogsContainerType) {\r\n\r\n    let dialogsElement = props.state.dialogsPage.dialogsData.map((m) => <DialogItem key={m.id} name={m.name}\r\n                                                                                    id={m.id}/>)\r\n    let messagesElement = props.state.dialogsPage.messagesData.map((m) => <MessageItem key={m.id} message={m.message}/>)\r\n\r\n    let onSendMessageClick=(values:any)=>{\r\n        props.sendMessageAction(values.addMessageBody)\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n\r\n                {dialogsElement}\r\n            </div>\r\n            <div className={s.messages}>\r\n                {messagesElement}\r\n                <div>\r\n                   <DialogsReduxForm onSubmit={onSendMessageClick}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n\r\n    )\r\n}\r\nexport default Dialogs;\r\n\r\nfunction DialogAddMassageForm(props:any){\r\n    return(\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div><Field name={'addMessageBody'} component={Textarea}\r\n                        placeholder={\"Enter your message\"} validate={required}/></div>\r\n            <div><button>Send</button></div>\r\n        </form>\r\n    )\r\n\r\n}\r\nlet DialogsReduxForm=reduxForm({form:'dialogAddMessageForm'})(DialogAddMassageForm)\r\n\r\n","import React, {ComponentType} from \"react\";\r\nimport {sendMessageActionCreator} from \"../../redux/dialogs-reducer\";\r\nimport Dialogs from \"./Dialogs\";\r\nimport {connect} from \"react-redux\";\r\nimport {compose, Dispatch} from \"@reduxjs/toolkit\";\r\nimport {RootStateType} from \"../../redux/redux-store\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\ntype mapStateToPropsType={\r\n\r\n    state:RootStateType\r\n}\r\ntype mapDispatchToPropsType={\r\n    sendMessageAction:(addMessageBody:string)=>void\r\n\r\n}\r\n\r\nexport type DialogsContainerType = mapStateToPropsType & mapDispatchToPropsType\r\n\r\nlet mapStateToProps = (state:RootStateType):mapStateToPropsType => {\r\n    return {\r\n        state:state\r\n\r\n    }\r\n};\r\nlet mapDispatchToProps = (dispatch:Dispatch):mapDispatchToPropsType => {\r\n    return {\r\n        sendMessageAction: (addMessageBody:string) => {\r\n            dispatch(sendMessageActionCreator(addMessageBody))\r\n        }\r\n    }\r\n}\r\nexport default compose<ComponentType>(connect(mapStateToProps, mapDispatchToProps),withAuthRedirect)(Dialogs);\r\n"],"sourceRoot":""}